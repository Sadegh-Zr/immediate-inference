{"version":3,"file":"component---src-pages-table-js-21897ea168e8a470a127.js","mappings":"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","sources":["webpack://immediate-inference/./src/pages/table.js","webpack://immediate-inference/./src/pages/table.module.css"],"sourcesContent":["import * as React from 'react';\r\nimport { PageWrapper } from '../components';\r\nimport * as styles from './table.module.css';\r\nimport { useTranslation } from 'gatsby-plugin-react-i18next';\r\nimport { graphql } from 'gatsby';\r\nimport { dir } from 'i18next';\r\n\r\nconst Table = () => {\r\n  const { t } = useTranslation(['table', 'general']);\r\n  return (\r\n    <PageWrapper\r\n      title={t('title', { ns: 'table' })}\r\n      className={styles.pageWrapper}\r\n    >\r\n      <p className={styles.description}>{t('description', { ns: 'table' })}</p>\r\n      <table className={styles.table}>\r\n        <thead>\r\n          <tr>\r\n            <th> </th>\r\n            <th>{t('universalAffirmativeShort', { ns: 'general' })}</th>\r\n            <th>{t('particularAffirmativeShort', { ns: 'general' })}</th>\r\n            <th>{t('universalNegativeShort', { ns: 'general' })}</th>\r\n            <th>{t('particularNegativeShort', { ns: 'general' })}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{t('conversion', { ns: 'general' })}</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n            <td>{t('universalNegativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{t('obvertedContraposition', { ns: 'general' })}</td>\r\n            <td>{t('universalAffirmativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n            <td>{t('particularNegativeShort', { ns: 'general' })}</td>\r\n            <td>{t('particularNegativeShort', { ns: 'general' })}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{t('contraposition', { ns: 'general' })}</td>\r\n            <td>{t('universalNegativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{t('obvertion', { ns: 'general' })}</td>\r\n            <td>{t('universalNegativeShort', { ns: 'general' })}</td>\r\n            <td>{t('particularNegativeShort', { ns: 'general' })}</td>\r\n            <td>{t('universalAffirmativeShort', { ns: 'general' })}</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{t('subjectComplemention', { ns: 'general' })}</td>\r\n            <td>{t('particularNegativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n          </tr>\r\n          <tr>\r\n            <td>{t('bothComplemention', { ns: 'general' })}</td>\r\n            <td>{t('particularAffirmativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n            <td>{t('particularNegativeShort', { ns: 'general' })}</td>\r\n            <td className=\"bold\">-</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ($language: String!) {\r\n    locales: allLocale(\r\n      filter: { ns: { in: [\"table\", \"guide\", \"general\"] }, language: { eq: $language } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Table;\r\n\r\nexport function Head({ pageContext, data }) {\r\n  const { language } = pageContext;\r\n  const pageLocale = data.locales.edges.find(edge => {\r\n    return edge.node.ns === 'table';\r\n  });\r\n  const localeData = JSON.parse(pageLocale.node.data);\r\n  const generalLocale = data.locales.edges.find(edge => {\r\n    return edge.node.ns === 'general';\r\n  });\r\n  const generalLocaleData = JSON.parse(generalLocale.node.data)\r\n  return (\r\n    <>\r\n      <html lang={language} dir={dir(language)} />\r\n      <title>{localeData.title}</title>\r\n      <meta name=\"description\" content={generalLocaleData?.description} />\r\n      <meta property=\"og:locale\" content={language === 'en' ? 'en_US' : 'fa_IR'} />\r\n      <meta property=\"og:title\" content={localeData?.title} />\r\n      <meta name=\"og:description\" content={generalLocaleData?.description} />\r\n      <meta property=\"og:image\" content={\"https://github.com/Sadegh-Zr/immediate-inference/assets/93543701/3beac570-39eb-4671-b130-ede8d1af593c\"} />\r\n      <body className={`-${dir(language)} -${language}`} />\r\n    </>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport var description = \"table-module--description--61d05\";\nexport var pageWrapper = \"table-module--pageWrapper--81a1f\";\nexport var table = \"table-module--table--640c3\";"],"names":["t","useTranslation","title","ns","className","Head","pageContext","data","language","pageLocale","locales","edges","find","edge","node","localeData","JSON","parse","generalLocale","generalLocaleData","lang","dir","name","content","description","property"],"sourceRoot":""}