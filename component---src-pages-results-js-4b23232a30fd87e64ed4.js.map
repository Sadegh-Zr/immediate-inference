{"version":3,"file":"component---src-pages-results-js-4b23232a30fd87e64ed4.js","mappings":"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","sources":["webpack://immediate-inference/./src/pages/results.js","webpack://immediate-inference/./src/pages/results.module.css"],"sourcesContent":["import * as React from 'react';\r\nimport { useI18next, useTranslation } from 'gatsby-plugin-react-i18next';\r\nimport {\r\n  ConditionalStatementText,\r\n  PageWrapper,\r\n  PredicativeStatementText,\r\n} from '../components';\r\nimport {\r\n  BOTH_COMPLEMENTION,\r\n  CONTRAPOSITION,\r\n  CONVERSION,\r\n  FIRST_FRAGMENT_COMPLEMENTION,\r\n  OBVERTED_CONTRAPOSITION,\r\n  OBVERTION,\r\n} from '../constants';\r\nimport { useStatementFunctions } from '../hooks';\r\nimport * as styles from './results.module.css';\r\nimport { graphql } from 'gatsby';\r\nimport { dir } from 'i18next';\r\nimport { isBrowser } from '../utils';\r\n\r\nconst Results = () => {\r\n  const { language: lng } = useI18next();\r\n  const searchParams = new URLSearchParams(isBrowser ? window.location.search : '');\r\n  const isPredicative = searchParams.get('subject');\r\n  const originalStatement = {\r\n    quality: (searchParams.get('quality'))?.toUpperCase(),\r\n    quantity: searchParams.get('quantity')?.toUpperCase(),\r\n    firstFragment: searchParams.get(isPredicative ? 'subject' : 'antecedent'),\r\n    secondFragment: searchParams.get(\r\n      isPredicative ? 'predicate' : 'consequent'\r\n    ),\r\n    isPredicative,\r\n  };\r\n  const { t } = useTranslation(['results', 'general']);\r\n  const { generateImmediateStatements, generateStatement } =\r\n    useStatementFunctions({ t, lng });\r\n  if (!isBrowser) return <div />\r\n  const IMMEDIATE_STATEMENTS_TYPES = [\r\n    {\r\n      type: CONVERSION,\r\n      title: t('conversion', { ns: 'general' }),\r\n    },\r\n    {\r\n      type: OBVERTED_CONTRAPOSITION,\r\n      title: t('obvertedContraposition', { ns: 'general' }),\r\n    },\r\n    {\r\n      type: CONTRAPOSITION,\r\n      title: t('contraposition', { ns: 'general' }),\r\n    },\r\n    {\r\n      type: OBVERTION,\r\n      title: t(\r\n        lng === 'fa' && !isPredicative ? 'conditionalObvertion' : 'obvertion',\r\n        { ns: 'general' }\r\n      ),\r\n    },\r\n    {\r\n      type: FIRST_FRAGMENT_COMPLEMENTION,\r\n      title: t(\r\n        isPredicative ? 'subjectComplemention' : 'AntecedentComplemention',\r\n        { ns: 'general' }\r\n      ),\r\n    },\r\n    {\r\n      type: BOTH_COMPLEMENTION,\r\n      title: t('bothComplemention', { ns: 'general' }),\r\n    },\r\n  ];\r\n  const TextComponent = isPredicative\r\n    ? PredicativeStatementText\r\n    : ConditionalStatementText;\r\n  const renderItems = () =>\r\n    IMMEDIATE_STATEMENTS_TYPES.map(({ type, title }, index) => {\r\n      const { statement } = generateImmediateStatements(originalStatement).find(\r\n        (resultStatment) => type === resultStatment.type\r\n      );\r\n      const animationDelay = `${index * 150 + 200}ms`;\r\n      return (\r\n        <div\r\n          key={type}\r\n          className={`${styles.resultItem} Results_resultItem`}\r\n          style={{ animationDelay }}\r\n        >\r\n          <h3>{title}:</h3>\r\n          <div>\r\n            <TextComponent statement={statement} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  return (\r\n    <PageWrapper\r\n      lng={lng}\r\n      hideLngChange\r\n      className={styles.pageWrapper}\r\n      title={t('title')}\r\n    >\r\n      <div className={styles.contentWrapper}>\r\n        <div className={styles.originalStatement}>\r\n          <h2>{t('original')}: </h2>\r\n          <span>{generateStatement(originalStatement)}</span>\r\n        </div>\r\n        {!isPredicative && (<p className={styles.guide}>{t('guide')}</p>)}\r\n        <div className={styles.resultContainer}>{renderItems()}</div>\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ($language: String!) {\r\n    locales: allLocale(\r\n      filter: { ns: { in: [\"results\", \"guide\", \"general\"] }, language: { eq: $language } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default Results;\r\n\r\nexport function Head({ pageContext, data }) {\r\n  const { language } = pageContext;\r\n  const pageLocale = data.locales.edges.find(edge => {\r\n    return edge.node.ns === 'results';\r\n  });\r\n  const generalLocale = data.locales.edges.find(edge => {\r\n    return edge.node.ns === 'general';\r\n  });\r\n  const localeData = JSON.parse(pageLocale.node.data);\r\n  const generalLocaleData = JSON.parse(generalLocale.node.data)\r\n  return (\r\n    <>\r\n      <html lang={language} dir={dir(language)} />\r\n      <title>{localeData.title}</title>\r\n      <meta name=\"description\" content={generalLocaleData?.description} />\r\n      <meta property=\"og:locale\" content={language === 'en' ? 'en_US' : 'fa_IR'} />\r\n      <meta property=\"og:title\" content={localeData?.title} />\r\n      <meta name=\"og:description\" content={generalLocaleData?.description} />\r\n      <meta property=\"og:image\" content={\"https://github.com/Sadegh-Zr/immediate-inference/assets/93543701/3beac570-39eb-4671-b130-ede8d1af593c\"} />\r\n      <body className={`-${dir(language)} -${language}`} />\r\n    </>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport var contentWrapper = \"results-module--contentWrapper--be9b6\";\nexport var fadeIn = \"results-module--fadeIn--e2b57\";\nexport var guide = \"results-module--guide--d83fb\";\nexport var originalStatement = \"results-module--originalStatement--2838c\";\nexport var pageWrapper = \"results-module--pageWrapper--199ac\";\nexport var resultContainer = \"results-module--resultContainer--d00e0\";\nexport var resultItem = \"results-module--resultItem--9b5d0\";"],"names":["language","lng","useI18next","searchParams","URLSearchParams","isBrowser","window","location","search","isPredicative","get","originalStatement","quality","toUpperCase","quantity","firstFragment","secondFragment","t","useTranslation","generateImmediateStatements","generateStatement","useStatementFunctions","IMMEDIATE_STATEMENTS_TYPES","type","CONVERSION","title","ns","OBVERTED_CONTRAPOSITION","CONTRAPOSITION","OBVERTION","FIRST_FRAGMENT_COMPLEMENTION","BOTH_COMPLEMENTION","TextComponent","PredicativeStatementText","ConditionalStatementText","hideLngChange","className","map","index","statement","find","resultStatment","animationDelay","key","styles","style","Head","pageContext","data","pageLocale","locales","edges","edge","node","generalLocale","localeData","JSON","parse","generalLocaleData","lang","dir","name","content","description","property"],"sourceRoot":""}